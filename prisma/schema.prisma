// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  posts     posts[]
  comments  comments[]
  reactions reactions[]
}

model posts {
  id         String      @id @default(uuid())
  title      String
  content    String
  authorId   String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  user       users       @relation(fields: [authorId], references: [id])
  comments   comments[]
  reactions  reactions[]
}

model comments {
  id         String   @id @default(uuid())
  content    String
  post_id    String
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  post       posts    @relation(fields: [post_id], references: [id])
  user       users    @relation(fields: [user_id], references: [id])
}

model reactions {
  id            String         @id @default(uuid())
  type_id       String
  post_id       String
  user_id       String
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  post          posts          @relation(fields: [post_id], references: [id])
  user          users          @relation(fields: [user_id], references: [id])
  reaction_type reaction_types @relation(fields: [type_id], references: [id])
}

model reaction_types {
  id         String      @id @default(uuid())
  name       String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  reactions  reactions[]
}
